[gd_scene load_steps=9 format=2]

[ext_resource path="res://ui/h_selector.gd" type="Script" id=1]

[sub_resource type="GDScript" id=1]
script/source = "extends Panel

signal player_ready()

var controller : Globals.Player

func _ready():
	controller.focus = $Scroll/VBox.get_child(0)
	controller.connect(\"focus_changed\", self, \"_on_focus_changed\")
	
	# display controls
	$Scroll/VBox/Controls.text = (
		\"Arrow Keys: Move/Tilt\\n\" +
		\"W: Jump/Dodge\\n\" +
		\"E: Weapon 1\\n\" +
		\"D: Weapon 2\\n\" +
		\"A: Item [WIP]\\n\" +
		\"Q: Shield [WIP]\\n\" +
		\"Left Shift: Throw [WIP]\"
		if controller.keyboard else
		\"Left Stick: Move/Tilt\\n\" +
		\"LB: Jump/Dodge\\n\" +
		\"B: Weapon 1\\n\" +
		\"A: Weapon 2\\n\" +
		\"X: Item [WIP]\\n\" +
		\"RB: Shield [WIP]\\n\" +
		\"RT: Throw [WIP]\")
	
	# color selection
	for i in Globals.colors:
		var node = ColorRect.new()
		node.color = i
		node.rect_min_size = Vector2(16, 16)
		$Scroll/VBox/ColorSelection/HBox.add_child(node)
	
	# weapon selection
	var min_level = WeaponResource.Level.FLIMSY
	var max_level = WeaponResource.Level.EFFECTIVE
	
	for i in Globals.weapons:
		var weapon : WeaponResource = Globals.get_weapon(i)
		if weapon.level < min_level or weapon.level > max_level:
			continue
		
		var node = TextureRect.new()
		node.texture = Globals.get_weapon(i).icon
		node.rect_min_size = Vector2(16, 16)
		node.set_meta(\"id\", i)
		$Scroll/VBox/Weapon1Selection/HBox.add_child(node)
	
	controller.match_settings.weapon1 = \"sword\"

func _on_focus_changed(new_focus: Control):
	#$Scroll.set_v_scroll(new_focus.rect_position.y)
	pass



func _on_ColorSelection_value_changed(value):
	controller.color = Globals.colors[value]
	$Scroll.update()

func _on_Weapon1Selection_value_changed(value):
	var container = $Scroll/VBox/Weapon1Selection/HBox
	var id = container.get_child(value).get_meta(\"id\")
	controller.match_settings.weapon1 = id



func _on_ReadyButton_pressed():
	emit_signal(\"player_ready\")




"

[sub_resource type="GDScript" id=2]
script/source = "extends ScrollContainer

func _ready():
	#get_v_scrollbar().rect_min_size.x = 2
	pass
"

[sub_resource type="GDScript" id=3]
script/source = "extends VBoxContainer

func _ready():
	
	for i in get_child_count():
		if i != 0:
			var path = get_child(i).get_path_to(get_child(i - 1))
			get_child(i).focus_neighbour_top = path
			
		if i != get_child_count() -1:
			var path = get_child(i).get_path_to(get_child(i + 1))
			get_child(i).focus_neighbour_bottom = path
"

[sub_resource type="StyleBoxFlat" id=4]
content_margin_left = 2.0
content_margin_right = 2.0
content_margin_top = 2.0
content_margin_bottom = 2.0
bg_color = Color( 0.6, 0.6, 0.6, 0.25098 )

[sub_resource type="StyleBoxFlat" id=5]
bg_color = Color( 1, 1, 1, 1 )
draw_center = false
border_width_left = 2
border_width_top = 2
border_width_right = 2
border_width_bottom = 2
border_color = Color( 1, 1, 1, 1 )
expand_margin_left = 2.0
expand_margin_right = 2.0
expand_margin_top = 2.0
expand_margin_bottom = 2.0

[sub_resource type="StyleBoxFlat" id=6]
bg_color = Color( 0.6, 0.6, 0.6, 0.501961 )

[sub_resource type="StyleBoxFlat" id=7]
bg_color = Color( 0.6, 0.6, 0.6, 0.25098 )

[node name="Control" type="Panel"]
margin_right = 160.0
margin_bottom = 240.0
rect_min_size = Vector2( 160, 240 )
script = SubResource( 1 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Label" type="Label" parent="."]
anchor_right = 1.0
margin_top = -16.0
margin_bottom = -2.0
custom_colors/font_color_shadow = Color( 0, 0, 0, 1 )
custom_constants/shadow_as_outline = 1
text = "Player 1"
align = 1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Scroll" type="ScrollContainer" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 2.0
margin_top = 2.0
margin_right = -2.0
margin_bottom = -2.0
scroll_horizontal_enabled = false
script = SubResource( 2 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="VBox" type="VBoxContainer" parent="Scroll"]
margin_right = 156.0
margin_bottom = 200.0
size_flags_horizontal = 3
custom_constants/separation = 2
script = SubResource( 3 )

[node name="Controls" type="Label" parent="Scroll/VBox"]
margin_right = 156.0
margin_bottom = 116.0
text = "Arrow Keys: Move/Tilt
W: Jump/Dodge
E: Weapon 1
D: Weapon 2
A: Item [WIP]
Q: Shield [WIP]
Left Shift: Throw [WIP]"

[node name="ColorSelection" type="Control" parent="Scroll/VBox"]
margin_top = 118.0
margin_right = 156.0
margin_bottom = 142.0
rect_min_size = Vector2( 0, 24 )
script = ExtResource( 1 )
wrap_around = true
display_text = 0
bg_stylebox = SubResource( 4 )
selected_stylebox = SubResource( 5 )

[node name="HBox" type="HBoxContainer" parent="Scroll/VBox/ColorSelection"]
anchor_right = 1.0
margin_left = 4.0
margin_top = 4.0
margin_right = -4.0
margin_bottom = 20.0
custom_constants/separation = 4
alignment = 1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Weapon1Selection" type="Control" parent="Scroll/VBox"]
margin_top = 144.0
margin_right = 156.0
margin_bottom = 184.0
rect_min_size = Vector2( 0, 40 )
focus_neighbour_top = NodePath("../ReadyButton")
script = ExtResource( 1 )
wrap_around = true
display_text = 0
bg_stylebox = SubResource( 4 )
selected_stylebox = SubResource( 5 )

[node name="HBox" type="HBoxContainer" parent="Scroll/VBox/Weapon1Selection"]
anchor_right = 1.0
margin_left = 4.0
margin_top = 4.0
margin_right = -4.0
margin_bottom = 20.0
custom_constants/separation = 4
alignment = 1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="ReadyButton" type="Button" parent="Scroll/VBox"]
margin_top = 186.0
margin_right = 156.0
margin_bottom = 200.0
focus_mode = 0
custom_styles/pressed = SubResource( 6 )
custom_styles/normal = SubResource( 7 )
text = "Ready"
__meta__ = {
"_edit_use_anchors_": false
}
[connection signal="value_changed" from="Scroll/VBox/ColorSelection" to="." method="_on_ColorSelection_value_changed"]
[connection signal="value_changed" from="Scroll/VBox/Weapon1Selection" to="." method="_on_Weapon1Selection_value_changed"]
[connection signal="pressed" from="Scroll/VBox/ReadyButton" to="." method="_on_ReadyButton_pressed"]
